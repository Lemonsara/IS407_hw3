{
  "hash": "d4405d396363c30927239d11d4c258c9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analysis on Rotten Tomatoes Movies\"\nauthor: \"Ning\"\ndate: \"2024-12-11\"\ncategories: [movies]\nimage: \"image.jpg\"\n---\n\n\n\nThis report provides a visual exploration of the **Rotten Tomatoes Movies** dataset. The dataset contains various attributes of movies, such as runtime, audience ratings, tomatometer ratings, and MPAA ratings. These attributes offer an opportunity to analyze and understand trends in the film industry.\n\nThrough a series of data visualizations, we aim to answer the following questions:\n- What is the distribution of movie runtimes?\n- How do audience ratings vary across different MPAA ratings?\n- Is there a relationship between tomatometer ratings and audience ratings?\n\nLet's dive into the visualizations and explore the story behind the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nmovies <- read.csv(\"Rotten Tomatoes Movies.csv\")\n\nmovies_clean <- movies %>%\n  filter(!is.na(runtime_in_minutes) & !is.infinite(runtime_in_minutes),\n         !is.na(audience_rating) & !is.infinite(audience_rating),\n         !is.na(tomatometer_rating) & !is.infinite(tomatometer_rating),\n         !is.na(runtime_in_minutes) & runtime_in_minutes >= 0 & runtime_in_minutes <= 250)\n\n# 1. Distribution of Tomatometer Ratings\nggplot(movies, aes(x = tomatometer_rating)) +\n  geom_histogram(binwidth = 5, fill = \"blue\", color = \"black\") +\n  labs(title = \"Distribution of Tomatometer Ratings\", x = \"Tomatometer Rating\", y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 2. Distribution of Runtime in Minutes with x-axis limited to 0-250\nggplot(movies_clean, aes(x = runtime_in_minutes)) +\n  geom_histogram(binwidth = 10, fill = \"green\", color = \"black\") +\n  labs(title = \"Distribution of Runtime in Minutes\", x = \"Runtime (minutes)\", y = \"Frequency\") +\n  xlim(0, 250) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 3. Boxplot of Audience Ratings by Movie Rating\nggplot(movies_clean, aes(x = rating, y = audience_rating)) +\n  geom_boxplot(fill = \"purple\", color = \"black\") +\n  labs(title = \"Audience Ratings by MPAA Rating\", x = \"MPAA Rating\", y = \"Audience Rating\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# 4. Count of Movies by Genre\nmovies %>%\n  count(genre) %>%\n  top_n(10, wt = n) %>%\n  ggplot(aes(x = reorder(genre, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"orange\", color = \"black\") +\n  labs(title = \"Top 10 Genres by Movie Count\", x = \"Genre\", y = \"Count\") +\n  coord_flip() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# 5. Scatter Plot of Tomatometer Rating vs Audience Rating\nggplot(movies_clean, aes(x = tomatometer_rating, y = audience_rating)) +\n  geom_point(alpha = 0.5, color = \"red\") +\n  geom_smooth(method = \"lm\", color = \"blue\", se = FALSE) +\n  labs(title = \"Tomatometer Rating vs Audience Rating\", x = \"Tomatometer Rating\", y = \"Audience Rating\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-5.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}